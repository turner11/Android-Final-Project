package com.finalProject.smstranslator;

import java.io.IOException;

import org.xmlpull.v1.XmlPullParser;
import org.xmlpull.v1.XmlPullParserException;

import android.content.res.Resources;
import android.content.res.XmlResourceParser;
import android.util.Xml;

public class LanguagesHandler {

	
	 public static void GetLanguages() {
	    	Resources res = MainActivity.getAppContext().getResources();
	    	XmlResourceParser languagesXml = res.getXml(R.xml.languages);
	    	String s = languagesXml.toString();
	    	
	    	try {
	            XmlPullParser parser = Xml.newPullParser();
	            parser.setFeature(XmlPullParser.FEATURE_PROCESS_NAMESPACES, false);
	            parser.setInput(languagesXml, null);
	            parser.nextTag();
	            return readFeed(parser);
	        } finally {
	            in.close();
	        }
			
			
		}
	 
	 // Parses the contents of an Language. If it encounters an element, hands it off
	// to their respective "read" methods for processing. Otherwise, skips the tag.
	private Language readEntry(XmlPullParser parser) throws XmlPullParserException, IOException {
	    parser.require(XmlPullParser.START_TAG, ns, "entry");
	    String name = null;
	    String symbol = null;
	    String EnglishName = null;
	    while (parser.next() != XmlPullParser.END_TAG) {
	        if (parser.getEventType() != XmlPullParser.START_TAG) {
	            continue;
	        }
	        String name = parser.getName();
	        if (name.equals("title")) {
	            title = readTitle(parser);
	        } else if (name.equals("summary")) {
	            summary = readSummary(parser);
	        } else if (name.equals("link")) {
	            link = readLink(parser);
	        } else {
	            skip(parser);
	        }
	    }
	    return new Language(title, summary, link);
	}

	 
}


